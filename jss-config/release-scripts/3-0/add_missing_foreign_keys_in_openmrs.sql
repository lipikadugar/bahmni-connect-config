/** Genrated using script
* select concat('ALTER TABLE ', table_name, ' ADD CONSTRAINT `', constraint_name, '` FOREIGN KEY ', '(', column_name, ') REFERENCES ', referenced_table_name, '(', referenced_column_name, ');') from information_schema.KEY_COLUMN_USAGE 
* where table_schema  = 'openmrs_fresh' and referenced_table_name is not null 
* and constraint_name not in (select constraint_name from information_schema.KEY_COLUMN_USAGE where table_schema  = 'openmrs' and referenced_table_name is not null);
*/

use openmrs;

ALTER TABLE active_list ADD CONSTRAINT `stop_obs_active_list` FOREIGN KEY (stop_obs_id) REFERENCES obs(obs_id);
ALTER TABLE active_list ADD CONSTRAINT `active_list_type_of_active_list` FOREIGN KEY (active_list_type_id) REFERENCES active_list_type(active_list_type_id);
ALTER TABLE active_list ADD CONSTRAINT `concept_active_list` FOREIGN KEY (concept_id) REFERENCES concept(concept_id);
ALTER TABLE active_list ADD CONSTRAINT `person_of_active_list` FOREIGN KEY (person_id) REFERENCES person(person_id);
ALTER TABLE active_list ADD CONSTRAINT `start_obs_active_list` FOREIGN KEY (start_obs_id) REFERENCES obs(obs_id);
ALTER TABLE active_list ADD CONSTRAINT `user_who_created_active_list` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE active_list ADD CONSTRAINT `user_who_voided_active_list` FOREIGN KEY (voided_by) REFERENCES users(user_id);
ALTER TABLE active_list_allergy ADD CONSTRAINT `reaction_allergy` FOREIGN KEY (reaction_concept_id) REFERENCES concept(concept_id);
ALTER TABLE active_list_type ADD CONSTRAINT `user_who_created_active_list_type` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE active_list_type ADD CONSTRAINT `user_who_retired_active_list_type` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE address_hierarchy_address_to_entry_map ADD CONSTRAINT `address_id_to_person_address_table` FOREIGN KEY (address_id) REFERENCES person_address(person_address_id);
ALTER TABLE address_hierarchy_address_to_entry_map ADD CONSTRAINT `entry_id_to_address_hierarchy_table` FOREIGN KEY (entry_id) REFERENCES address_hierarchy_entry(address_hierarchy_entry_id);
ALTER TABLE address_hierarchy_entry ADD CONSTRAINT `parent-to-parent` FOREIGN KEY (parent_id) REFERENCES address_hierarchy_entry(address_hierarchy_entry_id);
ALTER TABLE address_hierarchy_entry ADD CONSTRAINT `level_to_level` FOREIGN KEY (level_id) REFERENCES address_hierarchy_level(address_hierarchy_level_id);
ALTER TABLE address_hierarchy_level ADD CONSTRAINT `parent_level` FOREIGN KEY (parent_level_id) REFERENCES address_hierarchy_level(address_hierarchy_level_id);
ALTER TABLE cohort ADD CONSTRAINT `user_who_voided_cohort` FOREIGN KEY (voided_by) REFERENCES users(user_id);
ALTER TABLE cohort ADD CONSTRAINT `cohort_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE cohort ADD CONSTRAINT `user_who_changed_cohort` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE cohort_member ADD CONSTRAINT `member_patient` FOREIGN KEY (patient_id) REFERENCES patient(patient_id);
ALTER TABLE cohort_member ADD CONSTRAINT `parent_cohort` FOREIGN KEY (cohort_id) REFERENCES cohort(cohort_id);
ALTER TABLE concept ADD CONSTRAINT `user_who_retired_concept` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE concept ADD CONSTRAINT `concept_classes` FOREIGN KEY (class_id) REFERENCES concept_class(concept_class_id);
ALTER TABLE concept ADD CONSTRAINT `concept_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE concept ADD CONSTRAINT `concept_datatypes` FOREIGN KEY (datatype_id) REFERENCES concept_datatype(concept_datatype_id);
ALTER TABLE concept ADD CONSTRAINT `user_who_changed_concept` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE concept_answer ADD CONSTRAINT `answer_answer_drug_fk` FOREIGN KEY (answer_drug) REFERENCES drug(drug_id);
ALTER TABLE concept_answer ADD CONSTRAINT `answer` FOREIGN KEY (answer_concept) REFERENCES concept(concept_id);
ALTER TABLE concept_answer ADD CONSTRAINT `answers_for_concept` FOREIGN KEY (concept_id) REFERENCES concept(concept_id);
ALTER TABLE concept_answer ADD CONSTRAINT `answer_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE concept_class ADD CONSTRAINT `user_who_retired_concept_class` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE concept_class ADD CONSTRAINT `concept_class_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE concept_complex ADD CONSTRAINT `concept_attributes` FOREIGN KEY (concept_id) REFERENCES concept(concept_id);
ALTER TABLE concept_datatype ADD CONSTRAINT `user_who_retired_concept_datatype` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE concept_datatype ADD CONSTRAINT `concept_datatype_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE concept_description ADD CONSTRAINT `user_who_created_description` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE concept_description ADD CONSTRAINT `description_for_concept` FOREIGN KEY (concept_id) REFERENCES concept(concept_id);
ALTER TABLE concept_description ADD CONSTRAINT `user_who_changed_description` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE concept_map_type ADD CONSTRAINT `mapped_user_retired_concept_map_type` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE concept_map_type ADD CONSTRAINT `mapped_user_changed_concept_map_type` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE concept_map_type ADD CONSTRAINT `mapped_user_creator_concept_map_type` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE concept_name ADD CONSTRAINT `user_who_voided_this_name` FOREIGN KEY (voided_by) REFERENCES users(user_id);
ALTER TABLE concept_name ADD CONSTRAINT `name_for_concept` FOREIGN KEY (concept_id) REFERENCES concept(concept_id);
ALTER TABLE concept_name ADD CONSTRAINT `user_who_created_name` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE concept_name_tag_map ADD CONSTRAINT `mapped_concept_name_tag` FOREIGN KEY (concept_name_tag_id) REFERENCES concept_name_tag(concept_name_tag_id);
ALTER TABLE concept_name_tag_map ADD CONSTRAINT `mapped_concept_name` FOREIGN KEY (concept_name_id) REFERENCES concept_name(concept_name_id);
ALTER TABLE concept_numeric ADD CONSTRAINT `numeric_attributes` FOREIGN KEY (concept_id) REFERENCES concept(concept_id);
ALTER TABLE concept_proposal ADD CONSTRAINT `proposal_obs_id` FOREIGN KEY (obs_id) REFERENCES obs(obs_id);
ALTER TABLE concept_proposal ADD CONSTRAINT `concept_for_proposal` FOREIGN KEY (concept_id) REFERENCES concept(concept_id);
ALTER TABLE concept_proposal ADD CONSTRAINT `encounter_for_proposal` FOREIGN KEY (encounter_id) REFERENCES encounter(encounter_id);
ALTER TABLE concept_proposal ADD CONSTRAINT `proposal_obs_concept_id` FOREIGN KEY (obs_concept_id) REFERENCES concept(concept_id);
ALTER TABLE concept_proposal ADD CONSTRAINT `user_who_changed_proposal` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE concept_proposal ADD CONSTRAINT `user_who_created_proposal` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE concept_proposal_tag_map ADD CONSTRAINT `mapped_concept_proposal` FOREIGN KEY (concept_proposal_id) REFERENCES concept_proposal(concept_proposal_id);
ALTER TABLE concept_proposal_tag_map ADD CONSTRAINT `mapped_concept_proposal_tag` FOREIGN KEY (concept_name_tag_id) REFERENCES concept_name_tag(concept_name_tag_id);
ALTER TABLE concept_reference_map ADD CONSTRAINT `mapped_concept_reference_term` FOREIGN KEY (concept_reference_term_id) REFERENCES concept_reference_term(concept_reference_term_id);
ALTER TABLE concept_reference_map ADD CONSTRAINT `mapped_concept_map_type` FOREIGN KEY (concept_map_type_id) REFERENCES concept_map_type(concept_map_type_id);
ALTER TABLE concept_reference_map ADD CONSTRAINT `mapped_user_changed_ref_term` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE concept_reference_map ADD CONSTRAINT `map_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE concept_reference_map ADD CONSTRAINT `map_for_concept` FOREIGN KEY (concept_id) REFERENCES concept(concept_id);
ALTER TABLE concept_reference_source ADD CONSTRAINT `user_who_retired_concept_source` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE concept_reference_source ADD CONSTRAINT `concept_source_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE concept_reference_term ADD CONSTRAINT `mapped_concept_source` FOREIGN KEY (concept_source_id) REFERENCES concept_reference_source(concept_source_id);
ALTER TABLE concept_reference_term ADD CONSTRAINT `mapped_user_changed` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE concept_reference_term ADD CONSTRAINT `mapped_user_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE concept_reference_term ADD CONSTRAINT `mapped_user_retired` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE concept_reference_term_map ADD CONSTRAINT `mapped_user_changed_ref_term_map` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE concept_reference_term_map ADD CONSTRAINT `mapped_concept_map_type_ref_term_map` FOREIGN KEY (a_is_to_b_id) REFERENCES concept_map_type(concept_map_type_id);
ALTER TABLE concept_reference_term_map ADD CONSTRAINT `mapped_term_a` FOREIGN KEY (term_a_id) REFERENCES concept_reference_term(concept_reference_term_id);
ALTER TABLE concept_reference_term_map ADD CONSTRAINT `mapped_term_b` FOREIGN KEY (term_b_id) REFERENCES concept_reference_term(concept_reference_term_id);
ALTER TABLE concept_reference_term_map ADD CONSTRAINT `mapped_user_creator_ref_term_map` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE concept_set ADD CONSTRAINT `has_a` FOREIGN KEY (concept_set) REFERENCES concept(concept_id);
ALTER TABLE concept_set ADD CONSTRAINT `user_who_created` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE concept_state_conversion ADD CONSTRAINT `conversion_to_state` FOREIGN KEY (program_workflow_state_id) REFERENCES program_workflow_state(program_workflow_state_id);
ALTER TABLE concept_state_conversion ADD CONSTRAINT `concept_triggers_conversion` FOREIGN KEY (concept_id) REFERENCES concept(concept_id);
ALTER TABLE concept_state_conversion ADD CONSTRAINT `conversion_involves_workflow` FOREIGN KEY (program_workflow_id) REFERENCES program_workflow(program_workflow_id);
ALTER TABLE concept_word ADD CONSTRAINT `word_for` FOREIGN KEY (concept_id) REFERENCES concept(concept_id);
ALTER TABLE concept_word ADD CONSTRAINT `word_for_name` FOREIGN KEY (concept_name_id) REFERENCES concept_name(concept_name_id);
ALTER TABLE drug ADD CONSTRAINT `dosage_form_concept` FOREIGN KEY (dosage_form) REFERENCES concept(concept_id);
ALTER TABLE drug ADD CONSTRAINT `drug_changed_by` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE drug ADD CONSTRAINT `drug_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE drug ADD CONSTRAINT `drug_retired_by` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE drug ADD CONSTRAINT `primary_drug_concept` FOREIGN KEY (concept_id) REFERENCES concept(concept_id);
ALTER TABLE drug ADD CONSTRAINT `route_concept` FOREIGN KEY (route) REFERENCES concept(concept_id);
ALTER TABLE drug_ingredient ADD CONSTRAINT `ingredient` FOREIGN KEY (ingredient_id) REFERENCES concept(concept_id);
ALTER TABLE drug_ingredient ADD CONSTRAINT `combination_drug` FOREIGN KEY (concept_id) REFERENCES concept(concept_id);
ALTER TABLE drug_order ADD CONSTRAINT `extends_order` FOREIGN KEY (order_id) REFERENCES orders(order_id);
ALTER TABLE drug_order ADD CONSTRAINT `inventory_item` FOREIGN KEY (drug_inventory_id) REFERENCES drug(drug_id);
ALTER TABLE encounter ADD CONSTRAINT `encounter_changed_by` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE encounter ADD CONSTRAINT `encounter_form` FOREIGN KEY (form_id) REFERENCES form(form_id);
ALTER TABLE encounter ADD CONSTRAINT `encounter_ibfk_1` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE encounter ADD CONSTRAINT `encounter_location` FOREIGN KEY (location_id) REFERENCES location(location_id);
ALTER TABLE encounter ADD CONSTRAINT `encounter_patient` FOREIGN KEY (patient_id) REFERENCES patient(patient_id);
ALTER TABLE encounter ADD CONSTRAINT `encounter_type_id` FOREIGN KEY (encounter_type) REFERENCES encounter_type(encounter_type_id);
ALTER TABLE encounter ADD CONSTRAINT `encounter_visit_id_fk` FOREIGN KEY (visit_id) REFERENCES visit(visit_id);
ALTER TABLE encounter ADD CONSTRAINT `user_who_voided_encounter` FOREIGN KEY (voided_by) REFERENCES users(user_id);
ALTER TABLE encounter_provider ADD CONSTRAINT `encounter_id_fk` FOREIGN KEY (encounter_id) REFERENCES encounter(encounter_id);
ALTER TABLE encounter_provider ADD CONSTRAINT `encounter_role_id_fk` FOREIGN KEY (encounter_role_id) REFERENCES encounter_role(encounter_role_id);
ALTER TABLE encounter_provider ADD CONSTRAINT `provider_id_fk` FOREIGN KEY (provider_id) REFERENCES provider(provider_id);
ALTER TABLE encounter_role ADD CONSTRAINT `encounter_role_retired_by_fk` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE encounter_role ADD CONSTRAINT `encounter_role_changed_by_fk` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE encounter_role ADD CONSTRAINT `encounter_role_creator_fk` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE encounter_type ADD CONSTRAINT `user_who_created_type` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE encounter_type ADD CONSTRAINT `user_who_retired_encounter_type` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE field ADD CONSTRAINT `user_who_retired_field` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE field ADD CONSTRAINT `concept_for_field` FOREIGN KEY (concept_id) REFERENCES concept(concept_id);
ALTER TABLE field ADD CONSTRAINT `type_of_field` FOREIGN KEY (field_type) REFERENCES field_type(field_type_id);
ALTER TABLE field ADD CONSTRAINT `user_who_changed_field` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE field ADD CONSTRAINT `user_who_created_field` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE field_answer ADD CONSTRAINT `answers_for_field` FOREIGN KEY (field_id) REFERENCES field(field_id);
ALTER TABLE field_answer ADD CONSTRAINT `field_answer_concept` FOREIGN KEY (answer_id) REFERENCES concept(concept_id);
ALTER TABLE field_answer ADD CONSTRAINT `user_who_created_field_answer` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE field_type ADD CONSTRAINT `user_who_created_field_type` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE form ADD CONSTRAINT `user_who_retired_form` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE form ADD CONSTRAINT `form_encounter_type` FOREIGN KEY (encounter_type) REFERENCES encounter_type(encounter_type_id);
ALTER TABLE form ADD CONSTRAINT `user_who_created_form` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE form ADD CONSTRAINT `user_who_last_changed_form` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE form_field ADD CONSTRAINT `form_field_hierarchy` FOREIGN KEY (parent_form_field) REFERENCES form_field(form_field_id);
ALTER TABLE form_field ADD CONSTRAINT `field_within_form` FOREIGN KEY (field_id) REFERENCES field(field_id);
ALTER TABLE form_field ADD CONSTRAINT `form_containing_field` FOREIGN KEY (form_id) REFERENCES form(form_id);
ALTER TABLE form_field ADD CONSTRAINT `user_who_created_form_field` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE form_field ADD CONSTRAINT `user_who_last_changed_form_field` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE form_resource ADD CONSTRAINT `form_resource_form_fk` FOREIGN KEY (form_id) REFERENCES form(form_id);
ALTER TABLE hl7_in_queue ADD CONSTRAINT `hl7_source_with_queue` FOREIGN KEY (hl7_source) REFERENCES hl7_source(hl7_source_id);
ALTER TABLE hl7_source ADD CONSTRAINT `user_who_created_hl7_source` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE idgen_auto_generation_option ADD CONSTRAINT `identifier_type for idgen_auto_generation_option` FOREIGN KEY (identifier_type) REFERENCES patient_identifier_type(patient_identifier_type_id);
ALTER TABLE idgen_auto_generation_option ADD CONSTRAINT `source for idgen_auto_generation_option` FOREIGN KEY (source) REFERENCES idgen_identifier_source(id);
ALTER TABLE idgen_id_pool ADD CONSTRAINT `id for idgen_id_pool` FOREIGN KEY (id) REFERENCES idgen_identifier_source(id);
ALTER TABLE idgen_id_pool ADD CONSTRAINT `source for idgen_id_pool` FOREIGN KEY (source) REFERENCES idgen_identifier_source(id);
ALTER TABLE idgen_identifier_source ADD CONSTRAINT `identifier_type for idgen_identifier_source` FOREIGN KEY (identifier_type) REFERENCES patient_identifier_type(patient_identifier_type_id);
ALTER TABLE idgen_identifier_source ADD CONSTRAINT `creator for idgen_identifier_source` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE idgen_identifier_source ADD CONSTRAINT `changed_by for idgen_identifier_source` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE idgen_identifier_source ADD CONSTRAINT `retired_by for idgen_identifier_source` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE idgen_log_entry ADD CONSTRAINT `source for idgen_log` FOREIGN KEY (source) REFERENCES idgen_identifier_source(id);
ALTER TABLE idgen_log_entry ADD CONSTRAINT `generated_by for idgen_log` FOREIGN KEY (generated_by) REFERENCES users(user_id);
ALTER TABLE idgen_pooled_identifier ADD CONSTRAINT `pool_id for idgen_pooled_identifier` FOREIGN KEY (pool_id) REFERENCES idgen_id_pool(id);
ALTER TABLE idgen_remote_source ADD CONSTRAINT `id for idgen_remote_source` FOREIGN KEY (id) REFERENCES idgen_identifier_source(id);
ALTER TABLE idgen_reserved_identifier ADD CONSTRAINT `source for idgen_reserved_identifier` FOREIGN KEY (source) REFERENCES idgen_identifier_source(id);
ALTER TABLE idgen_seq_id_gen ADD CONSTRAINT `id for idgen_seq_id_gen` FOREIGN KEY (id) REFERENCES idgen_identifier_source(id);
ALTER TABLE location ADD CONSTRAINT `parent_location` FOREIGN KEY (parent_location) REFERENCES location(location_id);
ALTER TABLE location ADD CONSTRAINT `user_who_created_location` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE location ADD CONSTRAINT `user_who_retired_location` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE location_attribute ADD CONSTRAINT `location_attribute_voided_by_fk` FOREIGN KEY (voided_by) REFERENCES users(user_id);
ALTER TABLE location_attribute ADD CONSTRAINT `location_attribute_attribute_type_id_fk` FOREIGN KEY (attribute_type_id) REFERENCES location_attribute_type(location_attribute_type_id);
ALTER TABLE location_attribute ADD CONSTRAINT `location_attribute_changed_by_fk` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE location_attribute ADD CONSTRAINT `location_attribute_creator_fk` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE location_attribute ADD CONSTRAINT `location_attribute_location_fk` FOREIGN KEY (location_id) REFERENCES location(location_id);
ALTER TABLE location_attribute_type ADD CONSTRAINT `location_attribute_type_retired_by_fk` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE location_attribute_type ADD CONSTRAINT `location_attribute_type_changed_by_fk` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE location_attribute_type ADD CONSTRAINT `location_attribute_type_creator_fk` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE location_tag ADD CONSTRAINT `location_tag_retired_by` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE location_tag ADD CONSTRAINT `location_tag_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE location_tag_map ADD CONSTRAINT `location_tag_map_tag` FOREIGN KEY (location_tag_id) REFERENCES location_tag(location_tag_id);
ALTER TABLE location_tag_map ADD CONSTRAINT `location_tag_map_location` FOREIGN KEY (location_id) REFERENCES location(location_id);
ALTER TABLE logic_rule_definition ADD CONSTRAINT `retired_by_for_rule_definition` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE logic_rule_definition ADD CONSTRAINT `changed_by_for_rule_definition` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE logic_rule_definition ADD CONSTRAINT `creator_for_rule_definition` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE logic_rule_token ADD CONSTRAINT `token_changed_by` FOREIGN KEY (changed_by) REFERENCES person(person_id);
ALTER TABLE logic_rule_token ADD CONSTRAINT `token_creator` FOREIGN KEY (creator) REFERENCES person(person_id);
ALTER TABLE logic_rule_token_tag ADD CONSTRAINT `token_tag` FOREIGN KEY (logic_rule_token_id) REFERENCES logic_rule_token(logic_rule_token_id);
ALTER TABLE logic_token_registration ADD CONSTRAINT `token_registration_changed_by` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE logic_token_registration ADD CONSTRAINT `token_registration_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE logic_token_registration_tag ADD CONSTRAINT `token_registration_tag` FOREIGN KEY (token_registration_id) REFERENCES logic_token_registration(token_registration_id);
ALTER TABLE note ADD CONSTRAINT `patient_note` FOREIGN KEY (patient_id) REFERENCES patient(patient_id);
ALTER TABLE note ADD CONSTRAINT `encounter_note` FOREIGN KEY (encounter_id) REFERENCES encounter(encounter_id);
ALTER TABLE note ADD CONSTRAINT `note_hierarchy` FOREIGN KEY (parent) REFERENCES note(note_id);
ALTER TABLE note ADD CONSTRAINT `obs_note` FOREIGN KEY (obs_id) REFERENCES obs(obs_id);
ALTER TABLE note ADD CONSTRAINT `user_who_changed_note` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE note ADD CONSTRAINT `user_who_created_note` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE notification_alert ADD CONSTRAINT `alert_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE notification_alert ADD CONSTRAINT `user_who_changed_alert` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE notification_alert_recipient ADD CONSTRAINT `alert_read_by_user` FOREIGN KEY (user_id) REFERENCES users(user_id);
ALTER TABLE notification_alert_recipient ADD CONSTRAINT `id_of_alert` FOREIGN KEY (alert_id) REFERENCES notification_alert(alert_id);
ALTER TABLE obs ADD CONSTRAINT `previous_version` FOREIGN KEY (previous_version) REFERENCES obs(obs_id);
ALTER TABLE obs ADD CONSTRAINT `answer_concept` FOREIGN KEY (value_coded) REFERENCES concept(concept_id);
ALTER TABLE obs ADD CONSTRAINT `answer_concept_drug` FOREIGN KEY (value_drug) REFERENCES drug(drug_id);
ALTER TABLE obs ADD CONSTRAINT `encounter_observations` FOREIGN KEY (encounter_id) REFERENCES encounter(encounter_id);
ALTER TABLE obs ADD CONSTRAINT `obs_concept` FOREIGN KEY (concept_id) REFERENCES concept(concept_id);
ALTER TABLE obs ADD CONSTRAINT `obs_enterer` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE obs ADD CONSTRAINT `obs_grouping_id` FOREIGN KEY (obs_group_id) REFERENCES obs(obs_id);
ALTER TABLE obs ADD CONSTRAINT `obs_location` FOREIGN KEY (location_id) REFERENCES location(location_id);
ALTER TABLE obs ADD CONSTRAINT `obs_name_of_coded_value` FOREIGN KEY (value_coded_name_id) REFERENCES concept_name(concept_name_id);
ALTER TABLE obs ADD CONSTRAINT `obs_order` FOREIGN KEY (order_id) REFERENCES orders(order_id);
ALTER TABLE obs ADD CONSTRAINT `person_obs` FOREIGN KEY (person_id) REFERENCES person(person_id);
ALTER TABLE obs ADD CONSTRAINT `user_who_voided_obs` FOREIGN KEY (voided_by) REFERENCES users(user_id);
ALTER TABLE order_type ADD CONSTRAINT `user_who_retired_order_type` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE order_type ADD CONSTRAINT `type_created_by` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE orders ADD CONSTRAINT `discontinued_because` FOREIGN KEY (discontinued_reason) REFERENCES concept(concept_id);
ALTER TABLE orders ADD CONSTRAINT `orderer_not_drug` FOREIGN KEY (orderer) REFERENCES users(user_id);
ALTER TABLE orders ADD CONSTRAINT `orders_in_encounter` FOREIGN KEY (encounter_id) REFERENCES encounter(encounter_id);
ALTER TABLE orders ADD CONSTRAINT `order_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE orders ADD CONSTRAINT `order_for_patient` FOREIGN KEY (patient_id) REFERENCES patient(patient_id);
ALTER TABLE orders ADD CONSTRAINT `type_of_order` FOREIGN KEY (order_type_id) REFERENCES order_type(order_type_id);
ALTER TABLE orders ADD CONSTRAINT `user_who_discontinued_order` FOREIGN KEY (discontinued_by) REFERENCES users(user_id);
ALTER TABLE orders ADD CONSTRAINT `user_who_voided_order` FOREIGN KEY (voided_by) REFERENCES users(user_id);
ALTER TABLE patient ADD CONSTRAINT `user_who_voided_patient` FOREIGN KEY (voided_by) REFERENCES users(user_id);
ALTER TABLE patient ADD CONSTRAINT `person_id_for_patient` FOREIGN KEY (patient_id) REFERENCES person(person_id);
ALTER TABLE patient ADD CONSTRAINT `user_who_changed_pat` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE patient ADD CONSTRAINT `user_who_created_patient` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE patient_identifier ADD CONSTRAINT `patient_identifier_changed_by` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE patient_identifier ADD CONSTRAINT `defines_identifier_type` FOREIGN KEY (identifier_type) REFERENCES patient_identifier_type(patient_identifier_type_id);
ALTER TABLE patient_identifier ADD CONSTRAINT `identifier_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE patient_identifier ADD CONSTRAINT `identifier_voider` FOREIGN KEY (voided_by) REFERENCES users(user_id);
ALTER TABLE patient_identifier ADD CONSTRAINT `patient_identifier_ibfk_2` FOREIGN KEY (location_id) REFERENCES location(location_id);
ALTER TABLE patient_identifier_type ADD CONSTRAINT `user_who_retired_patient_identifier_type` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE patient_identifier_type ADD CONSTRAINT `type_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE patient_program ADD CONSTRAINT `patient_program_outcome_concept_id_fk` FOREIGN KEY (outcome_concept_id) REFERENCES concept(concept_id);
ALTER TABLE patient_program ADD CONSTRAINT `patient_in_program` FOREIGN KEY (patient_id) REFERENCES patient(patient_id);
ALTER TABLE patient_program ADD CONSTRAINT `patient_program_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE patient_program ADD CONSTRAINT `patient_program_location_id` FOREIGN KEY (location_id) REFERENCES location(location_id);
ALTER TABLE patient_program ADD CONSTRAINT `program_for_patient` FOREIGN KEY (program_id) REFERENCES program(program_id);
ALTER TABLE patient_program ADD CONSTRAINT `user_who_changed` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE patient_program ADD CONSTRAINT `user_who_voided_patient_program` FOREIGN KEY (voided_by) REFERENCES users(user_id);
ALTER TABLE patient_state ADD CONSTRAINT `patient_state_voider` FOREIGN KEY (voided_by) REFERENCES users(user_id);
ALTER TABLE patient_state ADD CONSTRAINT `patient_program_for_state` FOREIGN KEY (patient_program_id) REFERENCES patient_program(patient_program_id);
ALTER TABLE patient_state ADD CONSTRAINT `patient_state_changer` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE patient_state ADD CONSTRAINT `patient_state_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE patient_state ADD CONSTRAINT `state_for_patient` FOREIGN KEY (state) REFERENCES program_workflow_state(program_workflow_state_id);
ALTER TABLE person ADD CONSTRAINT `user_who_voided_person` FOREIGN KEY (voided_by) REFERENCES users(user_id);
ALTER TABLE person ADD CONSTRAINT `person_died_because` FOREIGN KEY (cause_of_death) REFERENCES concept(concept_id);
ALTER TABLE person ADD CONSTRAINT `user_who_changed_person` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE person ADD CONSTRAINT `user_who_created_person` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE person_address ADD CONSTRAINT `person_address_changed_by` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE person_address ADD CONSTRAINT `address_for_person` FOREIGN KEY (person_id) REFERENCES person(person_id);
ALTER TABLE person_address ADD CONSTRAINT `patient_address_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE person_address ADD CONSTRAINT `patient_address_void` FOREIGN KEY (voided_by) REFERENCES users(user_id);
ALTER TABLE person_attribute ADD CONSTRAINT `attribute_voider` FOREIGN KEY (voided_by) REFERENCES users(user_id);
ALTER TABLE person_attribute ADD CONSTRAINT `attribute_changer` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE person_attribute ADD CONSTRAINT `attribute_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE person_attribute ADD CONSTRAINT `defines_attribute_type` FOREIGN KEY (person_attribute_type_id) REFERENCES person_attribute_type(person_attribute_type_id);
ALTER TABLE person_attribute ADD CONSTRAINT `identifies_person` FOREIGN KEY (person_id) REFERENCES person(person_id);
ALTER TABLE person_attribute_type ADD CONSTRAINT `privilege_which_can_edit` FOREIGN KEY (edit_privilege) REFERENCES privilege(privilege);
ALTER TABLE person_attribute_type ADD CONSTRAINT `attribute_type_changer` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE person_attribute_type ADD CONSTRAINT `attribute_type_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE person_attribute_type ADD CONSTRAINT `user_who_retired_person_attribute_type` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE person_merge_log ADD CONSTRAINT `person_merge_log_changed_by_fk` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE person_merge_log ADD CONSTRAINT `person_merge_log_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE person_merge_log ADD CONSTRAINT `person_merge_log_loser` FOREIGN KEY (loser_person_id) REFERENCES person(person_id);
ALTER TABLE person_merge_log ADD CONSTRAINT `person_merge_log_voided_by_fk` FOREIGN KEY (voided_by) REFERENCES users(user_id);
ALTER TABLE person_merge_log ADD CONSTRAINT `person_merge_log_winner` FOREIGN KEY (winner_person_id) REFERENCES person(person_id);
ALTER TABLE person_name ADD CONSTRAINT `user_who_voided_name` FOREIGN KEY (voided_by) REFERENCES users(user_id);
ALTER TABLE person_name ADD CONSTRAINT `name_for_person` FOREIGN KEY (person_id) REFERENCES person(person_id);
ALTER TABLE person_name ADD CONSTRAINT `user_who_made_name` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE program ADD CONSTRAINT `program_outcomes_concept_id_fk` FOREIGN KEY (outcomes_concept_id) REFERENCES concept(concept_id);
ALTER TABLE program ADD CONSTRAINT `program_concept` FOREIGN KEY (concept_id) REFERENCES concept(concept_id);
ALTER TABLE program ADD CONSTRAINT `program_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE program ADD CONSTRAINT `user_who_changed_program` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE program_workflow ADD CONSTRAINT `program_for_workflow` FOREIGN KEY (program_id) REFERENCES program(program_id);
ALTER TABLE program_workflow ADD CONSTRAINT `workflow_changed_by` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE program_workflow ADD CONSTRAINT `workflow_concept` FOREIGN KEY (concept_id) REFERENCES concept(concept_id);
ALTER TABLE program_workflow ADD CONSTRAINT `workflow_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE program_workflow_state ADD CONSTRAINT `workflow_for_state` FOREIGN KEY (program_workflow_id) REFERENCES program_workflow(program_workflow_id);
ALTER TABLE program_workflow_state ADD CONSTRAINT `state_changed_by` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE program_workflow_state ADD CONSTRAINT `state_concept` FOREIGN KEY (concept_id) REFERENCES concept(concept_id);
ALTER TABLE program_workflow_state ADD CONSTRAINT `state_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE provider ADD CONSTRAINT `provider_changed_by_fk` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE provider ADD CONSTRAINT `provider_creator_fk` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE provider ADD CONSTRAINT `provider_person_id_fk` FOREIGN KEY (person_id) REFERENCES person(person_id);
ALTER TABLE provider ADD CONSTRAINT `provider_retired_by_fk` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE provider_attribute ADD CONSTRAINT `provider_attribute_voided_by_fk` FOREIGN KEY (voided_by) REFERENCES users(user_id);
ALTER TABLE provider_attribute ADD CONSTRAINT `provider_attribute_attribute_type_id_fk` FOREIGN KEY (attribute_type_id) REFERENCES provider_attribute_type(provider_attribute_type_id);
ALTER TABLE provider_attribute ADD CONSTRAINT `provider_attribute_changed_by_fk` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE provider_attribute ADD CONSTRAINT `provider_attribute_creator_fk` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE provider_attribute ADD CONSTRAINT `provider_attribute_provider_fk` FOREIGN KEY (provider_id) REFERENCES provider(provider_id);
ALTER TABLE provider_attribute_type ADD CONSTRAINT `provider_attribute_type_retired_by_fk` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE provider_attribute_type ADD CONSTRAINT `provider_attribute_type_changed_by_fk` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE provider_attribute_type ADD CONSTRAINT `provider_attribute_type_creator_fk` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE relationship ADD CONSTRAINT `relationship_changed_by` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE relationship ADD CONSTRAINT `person_a_is_person` FOREIGN KEY (person_a) REFERENCES person(person_id);
ALTER TABLE relationship ADD CONSTRAINT `person_b_is_person` FOREIGN KEY (person_b) REFERENCES person(person_id);
ALTER TABLE relationship ADD CONSTRAINT `relationship_type_id` FOREIGN KEY (relationship) REFERENCES relationship_type(relationship_type_id);
ALTER TABLE relationship ADD CONSTRAINT `relation_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE relationship ADD CONSTRAINT `relation_voider` FOREIGN KEY (voided_by) REFERENCES users(user_id);
ALTER TABLE relationship_type ADD CONSTRAINT `user_who_retired_relationship_type` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE relationship_type ADD CONSTRAINT `user_who_created_rel` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE report_object ADD CONSTRAINT `user_who_voided_report_object` FOREIGN KEY (voided_by) REFERENCES users(user_id);
ALTER TABLE report_object ADD CONSTRAINT `report_object_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE report_object ADD CONSTRAINT `user_who_changed_report_object` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE role_privilege ADD CONSTRAINT `role_privilege_to_role` FOREIGN KEY (role) REFERENCES role(role);
ALTER TABLE role_privilege ADD CONSTRAINT `privilege_definitons` FOREIGN KEY (privilege) REFERENCES privilege(privilege);
ALTER TABLE role_role ADD CONSTRAINT `parent_role` FOREIGN KEY (parent_role) REFERENCES role(role);
ALTER TABLE role_role ADD CONSTRAINT `inherited_role` FOREIGN KEY (child_role) REFERENCES role(role);
ALTER TABLE scheduler_task_config ADD CONSTRAINT `scheduler_changer` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE scheduler_task_config ADD CONSTRAINT `scheduler_creator` FOREIGN KEY (created_by) REFERENCES users(user_id);
ALTER TABLE scheduler_task_config_property ADD CONSTRAINT `task_config_for_property` FOREIGN KEY (task_config_id) REFERENCES scheduler_task_config(task_config_id);
ALTER TABLE serialized_object ADD CONSTRAINT `serialized_object_changed_by` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE serialized_object ADD CONSTRAINT `serialized_object_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE serialized_object ADD CONSTRAINT `serialized_object_retired_by` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE test_order ADD CONSTRAINT `test_order_specimen_source_fk` FOREIGN KEY (specimen_source) REFERENCES concept(concept_id);
ALTER TABLE test_order ADD CONSTRAINT `test_order_order_id_fk` FOREIGN KEY (order_id) REFERENCES orders(order_id);
ALTER TABLE user_property ADD CONSTRAINT `user_property_to_users` FOREIGN KEY (user_id) REFERENCES users(user_id);
ALTER TABLE user_role ADD CONSTRAINT `user_role_to_users` FOREIGN KEY (user_id) REFERENCES users(user_id);
ALTER TABLE user_role ADD CONSTRAINT `role_definitions` FOREIGN KEY (role) REFERENCES role(role);
ALTER TABLE users ADD CONSTRAINT `person_id_for_user` FOREIGN KEY (person_id) REFERENCES person(person_id);
ALTER TABLE users ADD CONSTRAINT `user_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE users ADD CONSTRAINT `user_who_changed_user` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE users ADD CONSTRAINT `user_who_retired_this_user` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE visit ADD CONSTRAINT `visit_indication_concept_fk` FOREIGN KEY (indication_concept_id) REFERENCES concept(concept_id);
ALTER TABLE visit ADD CONSTRAINT `visit_changed_by_fk` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE visit ADD CONSTRAINT `visit_creator_fk` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE visit ADD CONSTRAINT `visit_location_fk` FOREIGN KEY (location_id) REFERENCES location(location_id);
ALTER TABLE visit ADD CONSTRAINT `visit_patient_fk` FOREIGN KEY (patient_id) REFERENCES patient(patient_id);
ALTER TABLE visit ADD CONSTRAINT `visit_type_fk` FOREIGN KEY (visit_type_id) REFERENCES visit_type(visit_type_id);
ALTER TABLE visit ADD CONSTRAINT `visit_voided_by_fk` FOREIGN KEY (voided_by) REFERENCES users(user_id);
ALTER TABLE visit_attribute ADD CONSTRAINT `visit_attribute_voided_by_fk` FOREIGN KEY (voided_by) REFERENCES users(user_id);
ALTER TABLE visit_attribute ADD CONSTRAINT `visit_attribute_attribute_type_id_fk` FOREIGN KEY (attribute_type_id) REFERENCES visit_attribute_type(visit_attribute_type_id);
ALTER TABLE visit_attribute ADD CONSTRAINT `visit_attribute_changed_by_fk` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE visit_attribute ADD CONSTRAINT `visit_attribute_creator_fk` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE visit_attribute ADD CONSTRAINT `visit_attribute_visit_fk` FOREIGN KEY (visit_id) REFERENCES visit(visit_id);
ALTER TABLE visit_attribute_type ADD CONSTRAINT `visit_attribute_type_retired_by_fk` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE visit_attribute_type ADD CONSTRAINT `visit_attribute_type_changed_by_fk` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE visit_attribute_type ADD CONSTRAINT `visit_attribute_type_creator_fk` FOREIGN KEY (creator) REFERENCES users(user_id);
ALTER TABLE visit_type ADD CONSTRAINT `visit_type_retired_by` FOREIGN KEY (retired_by) REFERENCES users(user_id);
ALTER TABLE visit_type ADD CONSTRAINT `visit_type_changed_by` FOREIGN KEY (changed_by) REFERENCES users(user_id);
ALTER TABLE visit_type ADD CONSTRAINT `visit_type_creator` FOREIGN KEY (creator) REFERENCES users(user_id);
