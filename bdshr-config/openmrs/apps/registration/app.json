{
    "id": "bahmni.registration",
    "instanceOf": "bahmni.template.registration",
    "description": "Bahmni Patient Registration App",
    "extensionPoints": [
        {
            "id": "org.bahmni.registration.patient.search.result.action",
            "description": "Bahmni Patient Search Result Action"
        },
        {
            "id": "org.bahmni.registration.patient.edit.action",
            "description": "Bahmni Patient Edit Page Action"
        },
        {
            "id": "org.bahmni.registration.patient.create.action",
            "description": "Bahmni Patient Create Page Action"
        }
    ],
    "contextModel": [
        "patientUuid",
        "activeVisitUuid"
    ],
    "config": {
        "showEnterID": false,
        "autoCompleteFields": [
            "familyName"
        ],
        "patientInformation": {
            "hidden": {
                "attributes": [
                    "addressCode"
                ]
            }
        },
        "prepopulateFields" : ["Division", "Zilla", "Upazilla","Paurasava","Ward/Union"],
        "defaultIdentifierPrefix": "BDH",
        "defaultVisitType": "field",
        "searchByIdForwardUrl": "/patient/{{patientUuid}}",
        "showMiddleName": false,
        "addressHierarchy": {
            "showAddressFieldsTopDown": true,
            "strictAutocompleteFromLevel": "address2"
        },
        "conceptSetUI": {
            "REGISTRATION FEES": {
                "required": true,
                "label": "Fee"
            }
        },
        "fieldValidation": {
            "givenName" : {
                "pattern" : "^[a-zA-Z \\-\\.]{1,50}$",
                "errorMessage" : "Given name should only have alphabets, '-', '.' and spaces. Max length is 50"
            },
            "familyName" : {
                "pattern" : "^([A-Za-z]{1,25})$",
                "errorMessage" : "Family name should only have alphabets, not even space. Max length is 25"
            },
            "nationalId": {
                "pattern": "^(\\d{13}|\\d{17})$",
                "errorMessage": "National ID should be 13 or 17 digits"
            },
            "birthRegistrationId": {
                "pattern": "^\\d{17}$",
                "errorMessage": "Birth Registration Number should be 17 digits"
            },
            "phoneNumber": {
                "pattern": "^(\\d{3,12})$",
                "errorMessage": "Phone Number should be between 3 to 12 digits"
            },
            "healthId" : {
                "pattern" : "^[9][1-9][0-9]{9}$",
                "errorMessage" : "Please enter a valid HID"
            },
            "address1" : {
                "pattern" : "^(\\s*[^\\s]\\s*){3,255}$",
                "errorMessage" : "Should have minimum 3 characters"
            },
            "householdCode" : {
                "pattern" : "^\\d{1,50}$",
                "errorMessage" : "Should contain only digits, not even space. Max length is 50"
            },
            "fatherName" : {
                "pattern" : "(^([a-zA-Z\\.\\s]{1,100}) ([a-zA-Z]{0,25})$)|(^([a-zA-Z\\.]{1,100})$)",
                "errorMessage" : "Should contain only alphabets, dots and spaces"
            },
            "motherName" : {
              "pattern" : "(^([a-zA-Z\\.\\s]{1,100}) ([a-zA-Z]{0,25})$)|(^([a-zA-Z\\.]{1,100})$)",
              "errorMessage" : "Should contain only alphabets, dots and spaces"
            },
            "spouseName" : {
                "pattern" : "(^([a-zA-Z\\.\\s]{1,100}) ([a-zA-Z]{0,25})$)|(^([a-zA-Z\\.]{1,100})$)",
                "errorMessage" : "Should contain only alphabets, dots and spaces"
            }
        },
        "patientSearch": {
            "address": {
                "label": "Rural Ward",
                "placeholder": "Enter ward",
                "field": "address2"
            },
            "customAttributes": {
                "label": "ID/Phone/Father/Spouse ",
                "placeholder": "ID/Phone/Father/Spouse",
                "fields": [
                    "nationalId",
                    "healthId",
                    "birthRegistrationId",
                    "phoneNumber",
                    "fatherName",
                    "spouseName"
                ]
            }
        }
    }
}